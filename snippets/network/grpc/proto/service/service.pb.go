// Code generated by protoc-gen-go.
// source: proto/service/service.proto
// DO NOT EDIT!

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	proto/service/service.proto

It has these top-level messages:
	CreateUserRequest
	GetUserRequest
	GreetUserRequest
	GreetUserResponse
	User
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetUserRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GreetUserRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Greeting string `protobuf:"bytes,2,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *GreetUserRequest) Reset()                    { *m = GreetUserRequest{} }
func (m *GreetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GreetUserRequest) ProtoMessage()               {}
func (*GreetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GreetUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GreetUserRequest) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type GreetUserResponse struct {
	Greeting string `protobuf:"bytes,1,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *GreetUserResponse) Reset()                    { *m = GreetUserResponse{} }
func (m *GreetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GreetUserResponse) ProtoMessage()               {}
func (*GreetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GreetUserResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type User struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Role     string `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "mycodesmells.golangexamples.grpc.service.CreateUserRequest")
	proto.RegisterType((*GetUserRequest)(nil), "mycodesmells.golangexamples.grpc.service.GetUserRequest")
	proto.RegisterType((*GreetUserRequest)(nil), "mycodesmells.golangexamples.grpc.service.GreetUserRequest")
	proto.RegisterType((*GreetUserResponse)(nil), "mycodesmells.golangexamples.grpc.service.GreetUserResponse")
	proto.RegisterType((*User)(nil), "mycodesmells.golangexamples.grpc.service.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SimpleServer service

type SimpleServerClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	GreetUser(ctx context.Context, in *GreetUserRequest, opts ...grpc.CallOption) (*GreetUserResponse, error)
}

type simpleServerClient struct {
	cc *grpc.ClientConn
}

func NewSimpleServerClient(cc *grpc.ClientConn) SimpleServerClient {
	return &simpleServerClient{cc}
}

func (c *simpleServerClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/mycodesmells.golangexamples.grpc.service.SimpleServer/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServerClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/mycodesmells.golangexamples.grpc.service.SimpleServer/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simpleServerClient) GreetUser(ctx context.Context, in *GreetUserRequest, opts ...grpc.CallOption) (*GreetUserResponse, error) {
	out := new(GreetUserResponse)
	err := grpc.Invoke(ctx, "/mycodesmells.golangexamples.grpc.service.SimpleServer/GreetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SimpleServer service

type SimpleServerServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*google_protobuf.Empty, error)
	GetUser(context.Context, *GetUserRequest) (*User, error)
	GreetUser(context.Context, *GreetUserRequest) (*GreetUserResponse, error)
}

func RegisterSimpleServerServer(s *grpc.Server, srv SimpleServerServer) {
	s.RegisterService(&_SimpleServer_serviceDesc, srv)
}

func _SimpleServer_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServerServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mycodesmells.golangexamples.grpc.service.SimpleServer/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServerServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleServer_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServerServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mycodesmells.golangexamples.grpc.service.SimpleServer/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServerServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimpleServer_GreetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleServerServer).GreetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mycodesmells.golangexamples.grpc.service.SimpleServer/GreetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleServerServer).GreetUser(ctx, req.(*GreetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimpleServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mycodesmells.golangexamples.grpc.service.SimpleServer",
	HandlerType: (*SimpleServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _SimpleServer_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _SimpleServer_GetUser_Handler,
		},
		{
			MethodName: "GreetUser",
			Handler:    _SimpleServer_GreetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/service/service.proto",
}

func init() { proto.RegisterFile("proto/service/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4d, 0x6a, 0xdb, 0x40,
	0x14, 0x46, 0xae, 0x71, 0xeb, 0x71, 0x29, 0xd5, 0x14, 0x5a, 0x57, 0xf6, 0xa2, 0xcc, 0xca, 0x98,
	0x76, 0x06, 0x5c, 0x28, 0x45, 0xee, 0xca, 0xa5, 0x18, 0xba, 0xb4, 0x29, 0x85, 0xec, 0x64, 0xe5,
	0x65, 0x22, 0x90, 0x34, 0xca, 0xcc, 0xc8, 0xc4, 0x84, 0x6c, 0x72, 0x80, 0x6c, 0x72, 0x89, 0x1c,
	0x23, 0x77, 0xc8, 0x15, 0x72, 0x90, 0x30, 0x23, 0xc9, 0xf1, 0x0f, 0x04, 0x39, 0x2b, 0xfb, 0xe9,
	0xbd, 0xef, 0x87, 0xef, 0x93, 0x50, 0x2f, 0x93, 0x42, 0x0b, 0xa6, 0x40, 0x2e, 0xa3, 0x10, 0xaa,
	0x5f, 0x6a, 0x9f, 0xe2, 0x41, 0xb2, 0x0a, 0xc5, 0x31, 0xa8, 0x04, 0xe2, 0x58, 0x51, 0x2e, 0xe2,
	0x20, 0xe5, 0x70, 0x1e, 0x24, 0x59, 0x0c, 0x8a, 0x72, 0x99, 0x85, 0xb4, 0xbc, 0xf7, 0x7a, 0x5c,
	0x08, 0x1e, 0x03, 0xb3, 0xb8, 0x45, 0x7e, 0xc2, 0x20, 0xc9, 0xf4, 0xaa, 0xa0, 0xf1, 0xfa, 0xe5,
	0x32, 0xc8, 0x22, 0x16, 0xa4, 0xa9, 0xd0, 0x81, 0x8e, 0x44, 0xaa, 0x8a, 0x2d, 0xf9, 0x8f, 0xdc,
	0xdf, 0x12, 0x02, 0x0d, 0xff, 0x14, 0xc8, 0x19, 0x9c, 0xe5, 0xa0, 0x34, 0x9e, 0xa0, 0x66, 0xae,
	0x40, 0x76, 0x9d, 0x2f, 0xce, 0xa0, 0x33, 0xa2, 0xb4, 0xae, 0x11, 0x6a, 0x49, 0x2c, 0x96, 0x7c,
	0x45, 0xef, 0xa6, 0xa0, 0x37, 0x59, 0x3d, 0xf4, 0xc6, 0x6c, 0xd2, 0x20, 0x01, 0xcb, 0xdc, 0x9e,
	0xad, 0x67, 0xf2, 0x17, 0xbd, 0x9f, 0x4a, 0xa8, 0x7d, 0x6f, 0x76, 0xdc, 0xdc, 0x47, 0x29, 0xef,
	0x36, 0x8a, 0x5d, 0x35, 0x13, 0x86, 0xdc, 0x0d, 0x2e, 0x95, 0x89, 0x54, 0x6d, 0x03, 0x9c, 0x1d,
	0xc0, 0x0f, 0xd4, 0x34, 0xb7, 0xcf, 0x0a, 0x62, 0xd4, 0x94, 0x22, 0x86, 0x52, 0xcc, 0xfe, 0x1f,
	0xdd, 0xbd, 0x42, 0x6f, 0xe7, 0x91, 0x89, 0x61, 0x0e, 0x72, 0x09, 0x12, 0x6b, 0x84, 0x9e, 0xc2,
	0xc4, 0xe3, 0xfa, 0xb9, 0xed, 0x55, 0xe0, 0x7d, 0xa4, 0x45, 0x6d, 0xb4, 0xea, 0x94, 0xfe, 0x31,
	0x9d, 0x12, 0xf7, 0xea, 0xfe, 0xe1, 0xa6, 0xd1, 0x21, 0x2d, 0x66, 0xac, 0x29, 0xdf, 0x19, 0xe2,
	0x6b, 0x07, 0xbd, 0x2e, 0xa3, 0xc6, 0x3f, 0xeb, 0x6b, 0x6e, 0xb7, 0xe3, 0x1d, 0xd8, 0x32, 0xf9,
	0x6c, 0x8d, 0x7c, 0xc0, 0x6e, 0x61, 0x84, 0x5d, 0x54, 0x51, 0x5d, 0xe2, 0x5b, 0x07, 0xb5, 0xd7,
	0x0d, 0x60, 0xff, 0x00, 0x4b, 0x3b, 0xaf, 0x80, 0x37, 0x7e, 0x11, 0xb6, 0xa8, 0x9c, 0x10, 0xeb,
	0xb0, 0x4f, 0x3e, 0xed, 0x39, 0x64, 0xb6, 0x7a, 0xdf, 0x19, 0x4e, 0x7e, 0x1d, 0xf9, 0x3c, 0xd2,
	0xa7, 0xf9, 0x82, 0x86, 0x22, 0x61, 0x9b, 0x62, 0xac, 0x10, 0xfb, 0x56, 0xa9, 0x31, 0xa3, 0xc6,
	0xb6, 0xbe, 0xd7, 0x45, 0xcb, 0x8e, 0xdf, 0x1f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xe6, 0x53,
	0x91, 0xc7, 0x03, 0x00, 0x00,
}
